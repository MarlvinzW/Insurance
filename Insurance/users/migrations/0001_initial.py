# Generated by Django 2.2.7 on 2020-09-21 13:17

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(help_text='eg 263775580596', max_length=20)),
                ('id_number', models.CharField(help_text='eg 00-000000-A00', max_length=14)),
                ('has_confirmed_email', models.BooleanField(default=False)),
                ('address', models.CharField(max_length=255)),
                ('province', models.CharField(choices=[('Bulawayo', 'Bulawayo'), ('Harare', 'Harare'), ('Manicaland', 'Manicaland'), ('Mashonaland Central', 'Mashonaland Central'), ('Mashonaland East', 'Mashonaland East'), ('Mashonaland West', 'Mashonaland West'), ('Masvingo', 'Masvingo'), ('Matabeleland North', 'Matabeleland North'), ('Matabeleland South', 'Matabeleland South'), ('Midlands', 'Midlands')], max_length=255)),
                ('nationality', models.CharField(choices=[(' Afghanistan', ' Afghanistan'), (' Albania', ' Albania'), (' Algeria', ' Algeria'), (' American Samoa', ' American Samoa'), (' Andorra', ' Andorra'), (' Angola', ' Angola'), (' Anguilla', ' Anguilla'), (' Antarctica', ' Antarctica'), (' Antigua And Barbuda', ' Antigua And Barbuda'), (' Argentina', ' Argentina'), (' Armenia', ' Armenia'), (' Aruba', ' Aruba'), (' Australia', ' Australia'), (' Austria', ' Austria'), (' Azerbaijan', ' Azerbaijan'), (' Bahamas', ' Bahamas'), (' Bahrain', ' Bahrain'), (' Bangladesh', ' Bangladesh'), (' Barbados', ' Barbados'), (' Belarus', ' Belarus'), (' Belgium', ' Belgium'), (' Belize', ' Belize'), (' Benin', ' Benin'), (' Bermuda', ' Bermuda'), (' Bhutan', ' Bhutan'), (' Bolivia', ' Bolivia'), (' Bosnia And Herzegovina', ' Bosnia And Herzegovina'), (' Botswana', ' Botswana'), (' Bouvet Island', ' Bouvet Island'), (' Brazil', ' Brazil'), (' British Indian Ocean Territory', ' British Indian Ocean Territory'), (' Brunei Darussalam', ' Brunei Darussalam'), (' Bulgaria', ' Bulgaria'), (' Burkina Faso', ' Burkina Faso'), (' Burundi', ' Burundi'), (' Cambodia', ' Cambodia'), (' Cameroon', ' Cameroon'), (' Canada', ' Canada'), (' Cape Verde', ' Cape Verde'), (' Cayman Islands', ' Cayman Islands'), (' Central African Republic', ' Central African Republic'), (' Chad', ' Chad'), (' Chile', ' Chile'), (' China', ' China'), (' Christmas Island', ' Christmas Island'), (' Cocos (keeling) Islands', ' Cocos (keeling) Islands'), (' Colombia', ' Colombia'), (' Comoros', ' Comoros'), (' Congo', ' Congo'), (' Congo, The Democratic Republic Of The', ' Congo, The Democratic Republic Of The'), (' Cook Islands', ' Cook Islands'), (' Costa Rica', ' Costa Rica'), (" Cote D'ivoire", " Cote D'ivoire"), (' Croatia', ' Croatia'), (' Cuba', ' Cuba'), (' Cyprus', ' Cyprus'), (' Czech Republic', ' Czech Republic'), (' Denmark', ' Denmark'), (' Djibouti', ' Djibouti'), (' Dominica', ' Dominica'), (' Dominican Republic', ' Dominican Republic'), (' East Timor', ' East Timor'), (' Ecuador', ' Ecuador'), (' Egypt', ' Egypt'), (' El Salvador', ' El Salvador'), (' Equatorial Guinea', ' Equatorial Guinea'), (' Eritrea', ' Eritrea'), (' Estonia', ' Estonia'), (' Ethiopia', ' Ethiopia'), (' Falkland Islands (malvinas)', ' Falkland Islands (malvinas)'), (' Faroe Islands', ' Faroe Islands'), (' Fiji', ' Fiji'), (' Finland', ' Finland'), (' France', ' France'), (' French Guiana', ' French Guiana'), (' French Polynesia', ' French Polynesia'), (' French Southern Territories', ' French Southern Territories'), (' Gabon', ' Gabon'), (' Gambia', ' Gambia'), (' Georgia', ' Georgia'), (' Germany', ' Germany'), (' Ghana', ' Ghana'), (' Gibraltar', ' Gibraltar'), (' Greece', ' Greece'), (' Greenland', ' Greenland'), (' Grenada', ' Grenada'), (' Guadeloupe', ' Guadeloupe'), (' Guam', ' Guam'), (' Guatemala', ' Guatemala'), (' Guinea', ' Guinea'), (' Guinea-bissau', ' Guinea-bissau'), (' Guyana', ' Guyana'), (' Haiti', ' Haiti'), (' Heard Island And Mcdonald Islands', ' Heard Island And Mcdonald Islands'), (' Holy See (vatican City State)', ' Holy See (vatican City State)'), (' Honduras', ' Honduras'), (' Hong Kong', ' Hong Kong'), (' Hungary', ' Hungary'), (' Iceland', ' Iceland'), (' India', ' India'), (' Indonesia', ' Indonesia'), (' Iran, Islamic Republic Of', ' Iran, Islamic Republic Of'), (' Iraq', ' Iraq'), (' Ireland', ' Ireland'), (' Israel', ' Israel'), (' Italy', ' Italy'), (' Jamaica', ' Jamaica'), (' Japan', ' Japan'), (' Jordan', ' Jordan'), (' Kazakstan', ' Kazakstan'), (' Kenya', ' Kenya'), (' Kiribati', ' Kiribati'), (" Korea, Democratic People's Republic Of", " Korea, Democratic People's Republic Of"), (' Korea, Republic Of', ' Korea, Republic Of'), (' Kosovo', ' Kosovo'), (' Kuwait', ' Kuwait'), (' Kyrgyzstan', ' Kyrgyzstan'), (" Lao People's Democratic Republic", " Lao People's Democratic Republic"), (' Latvia', ' Latvia'), (' Lebanon', ' Lebanon'), (' Lesotho', ' Lesotho'), (' Liberia', ' Liberia'), (' Libyan Arab Jamahiriya', ' Libyan Arab Jamahiriya'), (' Liechtenstein', ' Liechtenstein'), (' Lithuania', ' Lithuania'), (' Luxembourg', ' Luxembourg'), (' Macau', ' Macau'), (' Macedonia, The Former Yugoslav Republic Of', ' Macedonia, The Former Yugoslav Republic Of'), (' Madagascar', ' Madagascar'), (' Malawi', ' Malawi'), (' Malaysia', ' Malaysia'), (' Maldives', ' Maldives'), (' Mali', ' Mali'), (' Malta', ' Malta'), (' Marshall Islands', ' Marshall Islands'), (' Martinique', ' Martinique'), (' Mauritania', ' Mauritania'), (' Mauritius', ' Mauritius'), (' Mayotte', ' Mayotte'), (' Mexico', ' Mexico'), (' Micronesia, Federated States Of', ' Micronesia, Federated States Of'), (' Moldova, Republic Of', ' Moldova, Republic Of'), (' Monaco', ' Monaco'), (' Mongolia', ' Mongolia'), (' Montserrat', ' Montserrat'), (' Montenegro', ' Montenegro'), (' Morocco', ' Morocco'), (' Mozambique', ' Mozambique'), (' Myanmar', ' Myanmar'), (' Namibia', ' Namibia'), (' Nauru', ' Nauru'), (' Nepal', ' Nepal'), (' Netherlands', ' Netherlands'), (' Netherlands Antilles', ' Netherlands Antilles'), (' New Caledonia', ' New Caledonia'), (' New Zealand', ' New Zealand'), (' Nicaragua', ' Nicaragua'), (' Niger', ' Niger'), (' Nigeria', ' Nigeria'), (' Niue', ' Niue'), (' Norfolk Island', ' Norfolk Island'), (' Northern Mariana Islands', ' Northern Mariana Islands'), (' Norway', ' Norway'), (' Oman', ' Oman'), (' Pakistan', ' Pakistan'), (' Palau', ' Palau'), (' Palestinian Territory, Occupied', ' Palestinian Territory, Occupied'), (' Panama', ' Panama'), (' Papua New Guinea', ' Papua New Guinea'), (' Paraguay', ' Paraguay'), (' Peru', ' Peru'), (' Philippines', ' Philippines'), (' Pitcairn', ' Pitcairn'), (' Poland', ' Poland'), (' Portugal', ' Portugal'), (' Puerto Rico', ' Puerto Rico'), (' Qatar', ' Qatar'), (' Reunion', ' Reunion'), (' Romania', ' Romania'), (' Russian Federation', ' Russian Federation'), (' Rwanda', ' Rwanda'), (' Saint Helena', ' Saint Helena'), (' Saint Kitts And Nevis', ' Saint Kitts And Nevis'), (' Saint Lucia', ' Saint Lucia'), (' Saint Pierre And Miquelon', ' Saint Pierre And Miquelon'), (' Saint Vincent And The Grenadines', ' Saint Vincent And The Grenadines'), (' Samoa', ' Samoa'), (' San Marino', ' San Marino'), (' Sao Tome And Principe', ' Sao Tome And Principe'), (' Saudi Arabia', ' Saudi Arabia'), (' Senegal', ' Senegal'), (' Serbia', ' Serbia'), (' Seychelles', ' Seychelles'), (' Sierra Leone', ' Sierra Leone'), (' Singapore', ' Singapore'), (' Slovakia', ' Slovakia'), (' Slovenia', ' Slovenia'), (' Solomon Islands', ' Solomon Islands'), (' Somalia', ' Somalia'), (' South Africa', ' South Africa'), (' South Georgia And The South Sandwich Islands', ' South Georgia And The South Sandwich Islands'), (' Spain', ' Spain'), (' Sri Lanka', ' Sri Lanka'), (' Sudan', ' Sudan'), (' Suriname', ' Suriname'), (' Svalbard And Jan Mayen', ' Svalbard And Jan Mayen'), (' Swaziland', ' Swaziland'), (' Sweden', ' Sweden'), (' Switzerland', ' Switzerland'), (' Syrian Arab Republic', ' Syrian Arab Republic'), (' Taiwan, Province Of China', ' Taiwan, Province Of China'), (' Tajikistan', ' Tajikistan'), (' Tanzania, United Republic Of', ' Tanzania, United Republic Of'), (' Thailand', ' Thailand'), (' Togo', ' Togo'), (' Tokelau', ' Tokelau'), (' Tonga', ' Tonga'), (' Trinidad And Tobago', ' Trinidad And Tobago'), (' Tunisia', ' Tunisia'), (' Turkey', ' Turkey'), (' Turkmenistan', ' Turkmenistan'), (' Turks And Caicos Islands', ' Turks And Caicos Islands'), (' Tuvalu', ' Tuvalu'), (' Uganda', ' Uganda'), (' Ukraine', ' Ukraine'), (' United Arab Emirates', ' United Arab Emirates'), (' United Kingdom', ' United Kingdom'), (' United States', ' United States'), (' United States Minor Outlying Islands', ' United States Minor Outlying Islands'), (' Uruguay', ' Uruguay'), (' Uzbekistan', ' Uzbekistan'), (' Vanuatu', ' Vanuatu'), (' Venezuela', ' Venezuela'), (' Viet Nam', ' Viet Nam'), (' Virgin Islands, British', ' Virgin Islands, British'), (' Virgin Islands, U.s.', ' Virgin Islands, U.s.'), (' Wallis And Futuna', ' Wallis And Futuna'), (' Western Sahara', ' Western Sahara'), (' Yemen', ' Yemen'), (' Zambia', ' Zambia'), (' Zimbabwe', ' Zimbabwe')], max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
